{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nfunction UserAddComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function UserAddComponent_form_7_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\", 7)(2, \"mat-label\");\n    i0.ɵɵtext(3, \" First Name \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\", 7)(6, \"mat-label\");\n    i0.ɵɵtext(7, \" Last Name \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-form-field\", 7)(10, \"mat-label\");\n    i0.ɵɵtext(11, \" Email \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 11);\n    i0.ɵɵtext(14, \"Add me\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.mailingListForm);\n  }\n}\nfunction UserAddComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 1);\n    i0.ɵɵtext(1, \" Your Information has been submitted. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserAddComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function UserAddComponent_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleSubmitted());\n    });\n    i0.ɵɵtext(1, \"Add Another\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UserAddComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    // would need to add more form validation to ensure all values are filled out and a valid email address has been submitted\n    this.mailingListForm = this.formBuilder.group({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    });\n    this.submitted = false;\n    //temporary array to store the submitted, not saved anywhere so will only persist within the current run, will be lost on reload\n    this.mailList = Array();\n  }\n  // function to toggle the submitted flag\n  toggleSubmitted() {\n    this.submitted = !this.submitted;\n  }\n  // function for submitting the data collected in the form\n  onSubmit() {\n    this.toggleSubmitted();\n    // add code here to hit api through a service that is set up with api calls\n    // code to push mailing list value to an array, will be lost when the app restarts\n    //will be replaced by call to service which would add the item to the database\n    this.mailList.push(this.mailingListForm.value);\n    console.warn('email address has been added: ', this.mailingListForm.value);\n    console.warn('full mailing list: ', this.mailList);\n    this.mailingListForm.reset();\n  }\n}\n_class = UserAddComponent;\n_class.ɵfac = function UserAddComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-add\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"MailingListAddCard\"], [1, \"white-text\"], [\"class\", \"inputForm\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"white-text\", 4, \"ngIf\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [1, \"inputForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"firstName\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function UserAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\", 1);\n      i0.ɵɵtext(3, \"Add me to the mailing list!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n      i0.ɵɵtext(5, \"Input your information below\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"mat-card-content\");\n      i0.ɵɵtemplate(7, UserAddComponent_form_7_Template, 15, 1, \"form\", 2);\n      i0.ɵɵtemplate(8, UserAddComponent_p_8_Template, 2, 0, \"p\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-card-actions\", 4);\n      i0.ɵɵtemplate(10, UserAddComponent_button_10_Template, 2, 0, \"button\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatButton, i4.MatCard, i4.MatCardActions, i4.MatCardContent, i4.MatCardHeader, i4.MatCardSubtitle, i4.MatCardTitle, i5.MatInput, i6.MatFormField, i6.MatLabel, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".mailing-list-add-card[_ngcontent-%COMP%] {\\n  display: block;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  margin: 6vh auto auto;\\n}\\n\\n.input-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.full-width[_ngcontent-%COMP%]{\\n  width: 100%;\\n}\\n\\n.white-text[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1hZGQvdXNlci1hZGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCx1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLm1haWxpbmctbGlzdC1hZGQtY2FyZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIG1hcmdpbjogNnZoIGF1dG8gYXV0bztcbn1cblxuLmlucHV0LWZvcm0ge1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZ1bGwtd2lkdGh7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ud2hpdGUtdGV4dCB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","UserAddComponent_form_7_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ctx_r0","mailingListForm","UserAddComponent_button_10_Template_button_click_0_listener","_r6","ctx_r5","toggleSubmitted","UserAddComponent","constructor","formBuilder","group","firstName","lastName","email","submitted","mailList","Array","push","value","console","warn","reset","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","UserAddComponent_Template","rf","ctx","ɵɵtemplate","UserAddComponent_form_7_Template","UserAddComponent_p_8_Template","UserAddComponent_button_10_Template","ɵɵadvance"],"sources":["/Users/ryanbeery/WebstormProjects/MailingListWebApp/src/app/user-add/user-add.component.ts","/Users/ryanbeery/WebstormProjects/MailingListWebApp/src/app/user-add/user-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.css']\n})\nexport class UserAddComponent {\n  // would need to add more form validation to ensure all values are filled out and a valid email address has been submitted\n  mailingListForm = this.formBuilder.group({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  })\n\n  submitted = false;\n\n  //temporary array to store the submitted, not saved anywhere so will only persist within the current run, will be lost on reload\n  mailList = Array();\n  constructor(private formBuilder: FormBuilder) {}\n\n  // function to toggle the submitted flag\n  toggleSubmitted() {\n    this.submitted = !this.submitted;\n  }\n\n  // function for submitting the data collected in the form\n  onSubmit(): void {\n    this.toggleSubmitted();\n    // add code here to hit api through a service that is set up with api calls\n\n    // code to push mailing list value to an array, will be lost when the app restarts\n    //will be replaced by call to service which would add the item to the database\n    this.mailList.push(this.mailingListForm.value);\n\n    console.warn('email address has been added: ', this.mailingListForm.value);\n    console.warn('full mailing list: ', this.mailList);\n    this.mailingListForm.reset();\n  }\n}\n","\n\n<mat-card  class=\"MailingListAddCard\">\n  <mat-card-header>\n    <mat-card-title class=\"white-text\">Add me to the mailing list!</mat-card-title>\n    <mat-card-subtitle>Input your information below</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <form class=\"inputForm\" [formGroup]=\"mailingListForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!submitted\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>\n          First Name\n        </mat-label>\n        <input matInput formControlName=\"firstName\" required>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>\n          Last Name\n        </mat-label>\n        <input matInput formControlName=\"lastName\" required>\n      </mat-form-field>\n\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>\n          Email\n        </mat-label>\n        <input matInput formControlName=\"email\" required>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add me</button>\n    </form>\n    <p class=\"white-text\" *ngIf=\"submitted\">\n      Your Information has been submitted.\n    </p>\n\n\n  </mat-card-content>\n  <mat-card-actions align=\"end\">\n\n    <button mat-raised-button color=\"primary\" (click)=\"toggleSubmitted()\" *ngIf=\"submitted\">Add Another</button>\n  </mat-card-actions>\n</mat-card>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}